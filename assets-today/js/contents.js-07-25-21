jQuery(function($) {
  "use strict";

	$('#tracks_div').hide();

	$('body').on('click','.btn_options',function(){
		var dtarget=$(this).attr('data-target');

		if(dtarget=='album_div'){
			$('#album_div').show();
			$('#tracks_div').hide();
			$('#btn_album_div').addClass('active');
			$('#btn_tracks_div').removeClass('active');
		}else{
			$('#album_div').hide();
			$('#tracks_div').show();
			$('#btn_album_div').removeClass('active');
			$('#btn_tracks_div').addClass('active');
			loadContents('2');
		}
	});


	$('body').on('change','#content_type',function(){

		var content_type=$('#content_type :selected').val();

		if(content_type=='1'){
			$('#content_genere_div').show();
			$('#content_track_div').show();
			$('#upload_album_track').html('Upload Track');
		}else if(content_type=='2'){
			$('#content_genere_div').hide();
			$('#content_track_div').hide();
			$('#upload_album_track').html('Create Album');
		}

	});


	// This set of validators requires the File API, so if we'ere in a browser
    // that isn't sufficiently "HTML5"-y, don't even bother creating them.  It'll
    // do no good, so we just automatically pass those tests.
    var is_supported_browser = !!window.File,
        fileSizeToBytes,
        formatter = $.validator.format;

    /**
     * Converts a measure of data size from a given unit to bytes.
     *
     * @param number size
     *   A measure of data size, in the give unit
     * @param string unit
     *   A unit of data.  Valid inputs are "B", "KB", "MB", "GB", "TB"
     *
     * @return number|bool
     *   The number of bytes in the above size/unit combo.  If an
     *   invalid unit is specified, false is returned
     */
    fileSizeToBytes = (function () {

        var units = ["B", "KB", "MB", "GB", "TB"];

        return function (size, unit) {

            var index_of_unit = units.indexOf(unit),
                coverted_size;

            if (index_of_unit === -1) {

                coverted_size = false;

            } else {

                while (index_of_unit > 0) {
                    size *= 1024;
                    index_of_unit -= 1;
                }

                coverted_size = size;
            }

            return coverted_size;
        };
    }());


	$.validator.addMethod(
      "minFileSize",
      function (value, element, params) {

          var files,
              unit = params.unit || "KB",
              size = params.size || 100,
              min_file_size = fileSizeToBytes(size, unit),
              is_valid = false;

          if (!is_supported_browser || this.optional(element)) {

              is_valid = true;

          } else {

              files = element.files;

              if (files.length < 1) {

                  is_valid = false;

              } else {

                  is_valid = files[0].size >= min_file_size;

              }
          }

          return is_valid;
      },
      function (params, element) {
          return formatter(
              "File must be at least {0}{1} large.",
              [params.size || 100, params.unit || "KB"]
          );
      }
  );

  $.validator.addMethod(
        "maxFileSize",
        function (value, element, params) {

            var files,
                unit = params.unit || "KB",
                size = params.size || 100,
                max_file_size = fileSizeToBytes(size, unit),
                is_valid = false;

            if (!is_supported_browser || this.optional(element)) {

                is_valid = true;

            } else {

                files = element.files;

                if (files.length < 1) {

                    is_valid = false;

                } else {

                    is_valid = files[0].size <= max_file_size;

                }
            }

            return is_valid;
        },
        function (params, element) {
            return formatter(
                "File cannot be larger than {0}{1}.",
                [params.size || 100, params.unit || "KB"]
            );
        }
  );



	$('#form_album_tracks').validate({
		rules:{
			content_title:{
				required:true
			},
			content_desc:{
				minlength:10,
				maxlength:255
			},
			content_cover_image:{
				extension: "jpg,jpeg,png",
				maxFileSize: {
		            "unit": "KB",
		            "size": "10000"
		        },
			},
			content_track:{
				extension: "mp3",
				maxFileSize: {
		            "unit": "KB",
		            "size": "30000"
		        },
			}
		},
		messages:{
			content_title:{
				required:'Enter Title'
			},
			content_desc:{
				minlength:'Minimum 10 charachters required',
				maxlength:'maximum 255 charachters are allowed'
			},
			content_cover_image:{
				extension: "Allowed files types are jpg,jpeg,png",
			},
			content_track:{
				extension: "Only mp3 files are alowed",
			}
		},
		submitHandler:function(){
	      $.ajax({
	          type:'POST',
	          url:base_url+'upload_contents',
	          data:new FormData($('#form_album_tracks')[0]),
	          cache: false,
	          contentType: false,
	          processData: false,
	          timeout: 60000000,
	          target: '.preview',
	          beforeSend:function(){
	            $('#upload_album_track').html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>').prop('disabled',true);
	          },
	          success:function(f){
	            if(f.success){
	             $('#upload_album_track').prop('disabled',true);
	             alert(f.success);
	             loadContents('1');
	             // Swal.fire({
	             //    icon: 'success',
	             //    title: f.success,
	             //    confirmButtonText:'Close',
	             //    confirmButtonColor:'#69da68',
	             //    allowOutsideClick: false,
	             //  });            
	            }else if(f.error){
	              $('#upload_album_track').prop('disabled',true);
	              alert(f.error);
	              // Swal.fire({
	              //   icon: 'error',
	              //   title: f.error,
	              //   confirmButtonText:'Close',
	              //   confirmButtonColor:'#69da68',
	              //   allowOutsideClick: false,
	              // });
	            }else if(f.redirect){
	              $('#upload_album_track').prop('disabled',true);
	              alert(f.success)
	              // Swal.fire({
	              //   icon: 'info',
	              //   title: 'Your session expired',
	              //   confirmButtonText:'Close',
	              //   confirmButtonColor:'#69da68',
	              //   allowOutsideClick: false,
	              // });
	            }
	          },
	          xhr: function(){
	              //Get XmlHttpRequest object
	               var xhr = $.ajaxSettings.xhr() ;
	              //Set onprogress event handler
	               xhr.upload.onprogress = function(data){
	                  var perc =(data.loaded / data.total) * 100;// Math.round((data.loaded / data.total) * 100);
	                  $('.progress-bar').css('width',perc.toFixed(2) + '%').text(perc.toFixed(2) + '%');
	               };
	               return xhr ;
	          },
	          error: function (e) {
	          },
	          complete:function(status,xhr){
	            $('.progress-bar').css('width', '0%').text('0%');
	            if($('#content_type :selected').val()=='1'){
	            	var txt='Upload Track';
	            }else{
	            	var txt='Create Album';
	            }
	            $('#upload_album_track').html(txt).attr('disabled',false);
	            $('#form_album_tracks')[0].reset();
	          },
	          resetForm: true 
	      });
	    }
	});



	function loadContents(content_type){
		var html='';
		$.ajax({
			type:'POST',
			url:base_url+'load_contents',
			data:{_content_type:content_type},
			beforeSend:function(){

			},
			success:function(d){
				if(d!=''){
					$.each(d,function(k,v){
						html+='<section class="col-lg-4 col-md-4 col-sm-6 m_top_30"> <img src="'+v.content_image+'" /> </section>';
					});
				}

				if(content_type=='1'){
					$('#album_div').html(html);
				}else if(content_type=='2'){
					$('#tracks_div').html(html);
				}

				
			}
		});
	}




});