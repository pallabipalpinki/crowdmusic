<?php 

class Dashboard extends CI_Controller{

    public function __construct() {

        parent::__construct(); 
        error_reporting(0);  

        $this->load->library('Encryption','encrypt');
        $this->load->model('user_login_model');

      }
        

    public function index()

    {   echo "dashboard";
        print_r( $this->session->userdata('SESSION_USER_ID'));   
        print_r( $this->session->userdata('SESSION_USER_type')); 
        print_r( $this->session->userdata('SESSION_USER_EMAIL'));
        die;
        $this->data['page'] = 'index';

        $this->load->vars($this->data);

        $this->load->view($this->data['theme'].''); 


    }    

public function is_valid_login(){
  //echo "string";die;
        $username = $this->input->post('username');
        $password = $this->input->post('password');

        //print_r($this->input->post());die;

         if (!isset($username) || $username == '' || $username == 'undefined') {
            /*If Username that we recieved is invalid, go here, and return 2 as output*/
            echo 2;
            exit();
        }
        if (!isset($password) || $password == '' || $password == 'undefined') {
            /*If Password that we recieved is invalid, go here, and return 3 as output*/
            echo 3;
            exit();
        }
        $this->form_validation->set_rules('username', 'username', 'required');
        $this->form_validation->set_rules('password', 'password', 'required');
        if ($this->form_validation->run() == FALSE) {
            /*If Both Username &  Password that we recieved is invalid, go here, and return 4 as output*/
            echo 4;
            exit();
        } else {
            /*Create object of model MLogin.php file under models folder*/
             $result = $this->user_login_model->check_login($username,$password);

            if (($result['status']) == 1) {
                  /*If everything is fine, then go here, and return 1 as output and set session*/
                  // $data = array(
                  //     'idUser' => $result[0]->idUser,
                  //     'username' => $result[0]->username
                  // );
                   $this->session->set_userdata('SESSION_USER_ID',$result['id']);   
                   $this->session->set_userdata('SESSION_USER_type',$result['type']); 
                   $this->session->set_userdata('SESSION_USER_EMAIL',$result['email']);
                  echo 1;
              } else {
                   echo 5;
                   }
                 }

          }    

public function logout(){
        if($this->session->userdata('SESSION_USER_ID')){
          $this->session->unset_userdata('SESSION_USER_ID');
          $this->session->unset_userdata('SESSION_USER_EMAIL');
          $this->session->unset_userdata('SESSION_USER_type');
          $this->session->sess_destroy();
        redirect('common');  
        }else{
        redirect('common');
      }
    }



   

  }

?>